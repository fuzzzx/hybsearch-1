(page "index.html"
  (:require
    [hybsearch.rpc :as rpc]
    [tailrecursion.hoplon.reload :refer [reload-all]]
    [ui.scheme-set-list :as scheme-set-list]
    [ui.scheme-set-detail :as scheme-set-detail]
    [ui.loci-upload :as loci-upload]
    [ui.analysis-set-create :as set-create]
    [ui.clustal-scheme-create :as scheme-create]
   ))

;;(reload-all 1000)

(rpc/init)


(defn show-modal [id] (-> (js/jQuery (str "#" id)) (.modal "show")))
(defn hide-modal [id] (-> (js/jQuery (str "#" id)) (.modal "hide")))


;; Todo: Guard against anything other than a GenBank file being uploaded

;; We should always pass the db to ui objects, in case we decide to extend them with custom queries later
;; might be cleaner code (though... maybe less efficeint) to just pass client state db to ui objects and perform
;; queries internally.


;; Todo: Open a state serving websocket with the server. Is RPC already a websocket?

(html
  (head)
  (body
     (scheme-create/create-modal :id "create-scheme-modal")
     (set-create/create-modal :id "create-set-modal")
     (loci-upload/upload-modal :id "upload-loci-modal")

     (div :class "ui menu"
          (div :class "header item" (i :class "lab icon") "HybSearch")
          (div :class "item" (div :class "ui green button" :on-click #(show-modal "create-scheme-modal") (i :class "setting icon") "New Clustal Scheme"))
          (div :class "item" (div :class "ui green button" :on-click #(show-modal "create-set-modal") (i :class "cube icon") "New Analysis Set"))
          (div :class "item" (div :class "ui green button" :on-click #(show-modal "upload-loci-modal") (i :class "cloud upload icon") "Upload Loci"))
          (div :class "item" (div :class "ui primary button" (i :class "bug icon") "Explore Loci")))
     (div :class "ui grid"
          (div :class "four wide column"
               (div :class "ui horizontal segment" :style "height: 90vh;"
                    (scheme-set-list/scheme-set-list :schemes rpc/clustal-schemes
                                                     :selected-scheme-id rpc/selected-clustal-scheme-id
                                                     :sets rpc/analysis-sets
                                                     :selected-set-id rpc/selected-analysis-set-id)))
          (div :class "twelve wide column"
               (div :class "ui horizontal segment" :style "height: 90vh;"
                    (let [full-detail (cell= (and rpc/selected-clustal-scheme rpc/selected-analysis-set))] ;; Needed this hack so all dom would be in the page before JS init, even though we don't want all dom visible right away
                      (div ;; wrapper for let return
                              (div :style (cell= (if full-detail "" "display: none;"))
                                   (scheme-set-detail/detail :clustal-scheme rpc/selected-clustal-scheme
                                                             :analysis-set rpc/selected-analysis-set
                                                             :jobs rpc/scheme-set-jobs))
                              (div :class "ui message" :style (cell= (if full-detail "display: none;" ""))
                                   (div :class "header" "Getting started:")
                                   (p "Please select a Clustal scheme and analysis set to see more detail. "
                                      "You can create these using the menu above.")))))))))


;; Initialize JS based elements
(-> (js/jQuery ".ui.modal") .modal)
(-> (js/jQuery ".menu .item") .tab)
(-> (js/jQuery ".progress") .progress)

;; Open a websocket for recieving state:


;; Lorem ipsum for mockups:
;;(text "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.")
