(ns ui.job-detail)


;; Todo: Play/Pause, Delete button wiring
;; Add more info about the job, like ability to view its sequences. Or even to see which triples are complete.


(defelem item
  [{:keys [job-cell]} children]
  (let [job-name (cell= (get job-cell :job/name))
;;        sequences (cell= (get job-cell :job/sequences))
        proc (cell= (get job-cell :job/numproc))
        total (cell= (get job-cell :job/numtriples))
        ]
    (print "Job Cell: " job-cell)
    (print "Job Name: " (get @job-cell :mongodb/objectid))
    (div :class "ui card"
         (div :class "content"
              (div :class "header" (text "~{job-name}"))
              (div :class "ui small progress"
                   :data-percent (* 100 (/ @proc @total)) ;; Todo: Get progress bar init working.
                   (div :class "bar")
                   (div :class "label" (i :class "wait icon") (text "~{proc}/~{total} triples processed"))))
         (div :class "ui two bottom attached buttons"
                (div :class "ui button" (i :class "trash outline icon") "Delete")
                (div :class "ui primary button" (i :class "play icon") "Run")))))

(defelem detail
  [{:keys [job]} children]
  (let [initialized (cell= (:job/initialized job))
        unprocessed (cell= (:job/unprocessed job))
        processing (cell= (:job/processing job))
        processed (cell= (:job/processed job))
        total (cell= (+ unprocessed processing processed))
        proc-stat (cell= (if initialized (text "~{processed}/~{total}") "-"))
        rate-stat (cell= (if initialized (text "0") "-"))
        time-stat (cell= (if initialized (text "0") "-"))
        status (cell= (:job/status job))
        errors (cell= (:job/errors job))]
    (div :class "ui three column grid"
         (div :class "row" ;; Controls
              (div :class "ui center aligned basic segment"
                   (div :class "ui green button" (i :class "play icon") "Run Analysis")
                   (div :class "ui blue button" (i :class "pause icon") "Pause Analysis")))
         (div :class "row" ;; Statistics
              (div :class "column"
                   (div :class "ui center aligned horizontal segment"
                        (div :class "ui statistic"
                             (div :class "value" "-")
                             (div :class "label" "Triples Processed"))))
              (div :class "column"
                   (div :class "ui center aligned horizontal segment"
                        (div :class "ui statistic"
                             (div :class "value" "-")
                             (div :class "label" "Triples/Second"))))
              (div :class "column"
                   (div :class "ui center aligned horizontal segment"
                        (div :class "ui statistic"
                             (div :class "value" "-")
                             (div :class "label" "Est. Time Remaining")))))
         (div :class "row" ;; Status
              (div :class "sixteen wide column"
                   (h3 :class "ui header" "Status:")
                   (p (text "~{status}"))))
         (div :class "row" ;; Error log
              (div :class "sixteen wide column"
                   (h3 :class "ui header" "Error Log:")
                   (loop-tpl :bindings [e errors]
                             e))))))



